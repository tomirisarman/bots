import time
import telebot
from telebot import types


pumpStart = "CAACAgIAAxkBAAEBfZBfkor728WtYLSKWedo99vpK6FhwgACnwIAAsxUSQk_aObxhqH53BsE"
pumpScary = "CAACAgIAAxkBAAEBfZJfkotKEKXGqLitG48IJyxSUPIYmgACmQIAAsxUSQncybHvbbp9UhsE"
pumpCongrats = "CAACAgIAAxkBAAEBfZRfkpN5-G_Yru1BAr-6TPy7OYSCBQACSQEAAladvQp1bSI3184pVBsE"
utyaClown = "CAACAgIAAxkBAAEBfqhfk-YpXiz7BMoRbngQ_ecX1S4smgACqAIAAladvQq3JSWRBwLaGxsE"
pumpBat = "CAACAgIAAxkBAAEBfqpfk-eNftzJLJC6GcpuhZFD0uQaHwACewEAAjDUnRF6pcpNH1twzBsE"
idshka = -417453928
bot = telebot.TeleBot("xxxxx")
winners=[]

@bot.message_handler(commands=["start"])
def starting(msg):
    try:
        current_nick = "@"+str(msg.from_user.username)
        if  current_nick not in winners:
            knopka = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            knopka.add("–î–∞")
            bot.send_message(msg.chat.id, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é —Ç–µ–±—è, " + msg.from_user.first_name + "!")
            bot.send_sticker(msg.chat.id, pumpStart)
            mes = bot.send_message(msg.chat.id,
                             "üéÉ –í–æ—Ç –∏ –Ω–∞—Å—Ç–∞–ª –∂—É—Ç–∫–∏–π –ø—Ä–∞–∑–¥–Ω–∏–∫ –•—ç–ª–ª–æ—É–∏–Ω! üéÉ\n" +
                             '–¢—Ä–∏ –≥–ª–∞–≤–Ω—ã—Ö "–∫" –Ω–∞ –•—ç–ª–ª–æ—É–∏–Ω - —ç—Ç–æ –∫–æ—Å—Ç—é–º—ã, –∫–æ–Ω—Ñ–µ—Ç—ã –∏... –∫—Ä–∏—Å—Ç–∞–ª–ª—ã)\n\n' +
                             '–°–µ–π—á–∞—Å —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å 5üíé –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤.\n' +
                             '–ß—Ç–æ–±—ã –∏—Ö –ø–æ–ª—É—á–∏—Ç—å, —Å–æ–≤—Å–µ–º –Ω–µ –Ω—É–∂–Ω–æ —Å—Ç—É—á–∞—Ç—å—Å—è –≤ –¥–≤–µ—Ä–∏ —Å —Ñ—Ä–∞–∑–æ–π "–ö—Ä–∏—Å—Ç–∞–ª–ª—ã –∏–ª–∏ –∂–∏–∑–Ω—å?" üßôüèª \n' +
                             '–î–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ–π—Ç–∏ –Ω–µ–±–æ–ª—å—à–æ–π –∫–≤–µ—Å—Ç - –Ω–∞–π—Ç–∏ —Ç—Ä–∏ –∫–æ–¥–æ–≤—ã—Ö —Å–ª–æ–≤–∞.\n\n' +
                             '–ù—É —á—Ç–æ, –ø–æ–∏–≥—Ä–∞–µ–º? üëª', reply_markup=knopka)
            bot.register_next_step_handler(mes, quest_start)
        else:
            bot.send_message(msg.chat.id, "–ö–≤–µ—Å—Ç –ø—Ä–æ–π–¥–µ–Ω. –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!")
    except:
        bot.send_message(msg.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")
        # bot.send_message(idshka, "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏. –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")


def quest_start(msg):
    try:
        if msg.text==None:
            bot.register_next_step_handler(msg, quest_start)
        elif msg.text.lower().strip()!=None and msg.text.lower().strip() == "–¥–∞":
            bot.send_message(msg.chat.id, "–û—Ç–ª–∏—á–Ω–æ!")
            bot.send_sticker(msg.chat.id, pumpScary)
            mes = bot.send_message(msg.chat.id,
                             "–ü–µ—Ä–≤—ã–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥ —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –≤ –æ–¥–Ω–æ–º –∏–∑ üìö –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π.\n" +
                             "–í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∏ –∑–∞–¥–∞–Ω–∏—è, –≤—ã–¥–∞–Ω–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏, –∏ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–æ–¥–æ–≤–æ–µ —Å–ª–æ–≤–æ.\n")
            bot.register_next_step_handler(mes, first_check)
        else:
            mes = bot.send_message(msg.chat.id, '–ê, –º–æ–∂–µ—Ç, —Å–∫–∞–∂–µ—à—å –º–Ω–µ "–î–∞"? :c')
            bot.register_next_step_handler(mes, quest_start)
    except:
        bot.send_message(msg.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")
    # bot.send_message(idshka, "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏. –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")


def first_check(msg):
    try:
        if msg.text==None:
            bot.register_next_step_handler(msg, first_check)
        else:
            ans = msg.text.lower().strip()
            if ans!=None and (ans == "–ø–µ–Ω–Ω–∏–≤–∞–π–∑"\
                    or ans == "–ø–µ–Ω–∏–≤–∞–π–∑"\
                    or ans == "–ø—ç–Ω–Ω–∏–≤–∞–π–∑"\
                    or ans == "–ø—ç–Ω–∏–≤–∞–π–∑"):
                bot.send_message(msg.chat.id, "–ê —Ç—ã –º–æ–ª–æ–¥–µ—Ü! –ï—â–µ –Ω–µ–º–Ω–æ–≥–æ –∏ –∫—Ä–∏—Å—Ç–∞–ª–ª—ã —É —Ç–µ–±—è –≤ –∫–∞—Ä–º–∞–Ω–µ.")
                bot.send_sticker(msg.chat.id, utyaClown)
                mes = bot.send_message(msg.chat.id, "–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –≤—Ç–æ—Ä–æ–π –∫–æ–¥, –∑–∞–≥–ª—è–Ω–∏ –≤ –∫–æ—Ä–∏–¥–æ—Ä.\n" +
                                              "–ù–µ—Ç, –Ω–µ —É —Ç–µ–±—è –¥–æ–º–∞, –∞ –Ω–∞ –Ω–∞—à–µ–º –î–∏—Å–∫–æ—Ä–¥-—Å–µ—Ä–≤–µ—Ä–µ)\n\n" +
                                              "–ü—Ä–æ—è–≤–∏–≤ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å üïµüèª, —Ç—ã –ª–µ–≥–∫–æ –µ–≥–æ –Ω–∞–π–¥–µ—à—å.\n" +
                                              "–ö–∞–∫ –Ω–∞–π–¥–µ—à—å, –æ—Ç–ø—Ä–∞–≤–ª—è–π —Å—é–¥–∞.")
                bot.register_next_step_handler(mes, second_check)
            else:
                mes = bot.send_message(msg.chat.id, "–ù–µ —Ç–æ. –ë—É–¥—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–π –≤ –ø–æ–∏—Å–∫–∞—Ö –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.")
                bot.register_next_step_handler(mes, first_check)
    except:
        mes = bot.send_message(msg.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")
        bot.register_next_step_handler(mes, first_check)
        # bot.send_message(idshka, "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏. –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")


def second_check(msg):
    try:
        if msg.text==None:
            bot.register_next_step_handler(msg, second_check)
        else:
            ans = msg.text.lower().strip()
            if ans!=None and (ans == "—Ñ—Ä–µ–¥–¥–∏ –∫—Ä—é–≥–µ—Ä"\
                    or ans == "—Ñ—Ä–µ–¥–∏ –∫—Ä—é–≥–µ—Ä"\
                    or ans == "—Ñ—Ä—ç–¥–¥–∏ –∫—Ä—é–≥–µ—Ä" \
                    or ans == "—Ñ—Ä—ç–¥–∏ –∫—Ä—é–≥–µ—Ä" \
                    or ans == "–∫—Ä—é–≥–µ—Ä"):
                bot.send_message(msg.chat.id, "–î–∞ —Ç—ã –º–æ–Ω—Å—Ç—Ä!üî• –¢—ã —É–∂–µ –Ω–∞ —Ñ–∏–Ω–∏—à–Ω–æ–π –ø—Ä—è–º–æ–π, –æ—Ç –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤ —Ç–µ–±—è –æ—Ç–¥–µ–ª—è–µ—Ç –≤—Å–µ–≥–æ –æ–¥–∏–Ω –æ—Ç–≤–µ—Ç.")
                bot.send_sticker(msg.chat.id, pumpBat)
                mes = bot.send_message(msg.chat.id, "–í–≤–µ–¥–∏ –¥–∞—Ç—É –æ—Å–Ω–æ–≤–∞–Ω–∏—è –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–π –ê–∫–∞–¥–µ–º–∏–∏ –®–∞–≥ –≤ –≥. –ê–ª–º–∞—Ç—ã. –û—Ç–ø—Ä–∞–≤–ª—è–π –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: 1 —è–Ω–≤–∞—Ä—è 2020.")
                bot.register_next_step_handler(mes, third_check)
            else:
                mes = bot.send_message(msg.chat.id, "–ù–µ–≤–µ—Ä–Ω–æ. –î–∞–≤–∞–π, —Ç—ã —Å–º–æ–∂–µ—à—å.")
                bot.register_next_step_handler(mes, second_check)
    except:
        mes = bot.send_message(msg.chat.id, "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")
        bot.register_next_step_handler(mes, second_check)
        # bot.send_message(idshka, "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏. –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")


def third_check(msg):
    try:
        if msg.text==None:
            bot.register_next_step_handler(msg, third_check)
        else:
            ans = msg.text.lower().strip()
            if ans!=None and (ans == "10 –æ–∫—Ç—è–±—Ä—è 2013" or ans == "10.10.2013" or ans == "10.10.13"):
                bot.send_message(msg.chat.id, "–£–†–ê! –¢–µ–ø–µ—Ä—å —Ç—ã –ø–æ–±–µ–¥–∏—Ç–µ–ª—å! üéâüéâüéâ\n"+
                                    "\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–∏ 5 –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤, –æ—Ç–ø—Ä–∞–≤—å —Å–∫—Ä–∏–Ω—à–æ—Ç —ç—Ç–æ–≥–æ –ø–æ–±–µ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —É—á–µ–±–Ω—É—é —á–∞—Å—Ç—å - @Itstepalmaty.\n\n"+
                                    "–¢—ã –º–æ–ª–æ–¥—á–∏–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! üëª")
                bot.send_sticker(msg.chat.id, pumpCongrats)
                winner_nick = "@" + str(msg.from_user.username)
                winner_name = msg.from_user.first_name+" "+msg.from_user.last_name
                bot.send_message(idshka, "+1 –ø–æ–±–µ–¥–∏—Ç–µ–ª—å: " + str(winner_nick) + " - " + str(winner_name))
                if winner_nick == "@None":
                    kbrd = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
                    send_num = types.KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –∫–æ–Ω—Ç–∞–∫—Ç", request_contact=True)
                    kbrd.add(send_num)
                    mes = bot.send_message(msg.chat.id, "–ñ–∞–ª—å, —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç –Ω–∏–∫–Ω–µ–π–º–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º( –ù–µ –º–æ–≥—É –≤–Ω–µ—Å—Ç–∏ —Ç–µ–±—è –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π.", reply_markup=kbrd)
                    bot.register_next_step_handler(mes, get_contact)
                else:
                    global winners
                    winners.append(winner_nick)
                # cursor.execute("""INSERT INTO winners VALUES(?, ?)""", (winner_nick, winner_name))
                # db.commit()
            else:
                mes = bot.send_message(msg.chat.id, "–ü–æ—á—Ç–∏, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.")
                bot.register_next_step_handler(mes, third_check)
    except:
        mes = bot.send_message(msg.chat.id, "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏. –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")
        bot.register_next_step_handler(mes, third_check)

def get_contact(msg):
    if msg.contact!=None:
        while 1:
            try:
                winners.append(str(msg.contact.phone_number))
                break
            except:
                pass
        bot.send_message(msg.chat.id, "–°–ø–∞—Å–∏–±–æ! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–±–µ–¥–æ–π.")
    else:
        mes = bot.send_message(msg.chat.id, "–û—à–∏–±–∫–∞.")
        bot.register_next_step_handler(mes, get_contact)


bot.polling()




